@if (this.Story != null)
{
    <div class="story-preview">

        <div class="preview-part">

            @if (this.EnableZoom)
            {
                <ToolBar>
                    <IconButton Icon="SvgIconType.ZoomIn" Title="Zoom In" OnClick="OnClickZoomIn" />
                    <IconButton Icon="SvgIconType.ZoomOut" Title="Zoom Out" OnClick="OnClickZoomOut" />
                    <IconButton Icon="SvgIconType.ZoomReset" Title="Reset Zoom" OnClick="OnClickResetZoom" />
                </ToolBar>
            }

            <div class="preview-frame-viewport">
                <PreviewFrame @ref="_PreviewFrame"
                              Story="this.Story"
                              ViewMode="story"
                              Id="@this.Story.NavigationPath"
                              Args="this.Story.Context.Args"
                              Globals="this.Globals" />
            </div>

            <!-- "Show Code" -->
            <CornerButton Class="show-code-button" OnClick="() => { this._ShowCode = !this._ShowCode; }">
                @(this._ShowCode ? "Hide code" : "Show code")
            </CornerButton>

        </div>

        <!-- Code View -->
        <CodeView Story="this.Story" Visible="this._ShowCode" />
    </div>
}

@code
{
    [Parameter, EditorRequired]
    public Story? Story { get; set; }

    [Parameter]
    public bool EnableZoom { get; set; }

    [Parameter]
    public IReadOnlyDictionary<string, object?>? Globals { get; set; }

    [CascadingParameter]
    internal IServiceProvider Services { get; init; } = default!;

    private PreviewFrame? _PreviewFrame;

    private bool _ShowCode = false;

    private async void OnClickZoomIn()
    {
        if (this._PreviewFrame != null)
        {
            await this._PreviewFrame.ZoomInAsync();
        }
    }

    private async void OnClickZoomOut()
    {
        if (this._PreviewFrame != null)
        {
            await this._PreviewFrame.ZoomOutAsync();
        }
    }

    private async void OnClickResetZoom()
    {
        if (this._PreviewFrame != null)
        {
            await this._PreviewFrame.ResetZoomAsync();
        }
    }
}
