@using BlazingStory.Internals.Components.SideBar.NavigationTree
@using BlazingStory.Internals.Components.SideBar.SearchAndHistory

<nav class="sidebar stack vertical">

    <div class="sidebar-header">
        
        <div class="sidebar-header-title">
            @if (this.BlazingStoryApp?.BrandLogoArea != null)
            {
                <text>@this.BlazingStoryApp.BrandLogoArea(this.BlazingStoryApp)</text>
            }
            else
            {
                <BrandLogo />
            }
        </div>

        <SettingsMenu />

    </div>

    <SearchAndHistory @bind-SearchMode="this._SearchMode" />

    @if (!_SearchMode)
    {
        <NavigationTree NavigationRoot="this._NavigationRoot" />
    }

</nav>

@code
{
    [CascadingParameter]
    protected StoriesStore StoriesStore { get; init; } = default!;

    [CascadingParameter]
    protected CustomPageStore CustomPageStore {get; init; } = default!;

    [CascadingParameter]
    protected QueryRouteData RouteData { get; init; } = default!;

    [CascadingParameter]
    protected IServiceProvider Services { get; init; } = default!;

    [CascadingParameter]
    protected BlazingStoryApp BlazingStoryApp { get; init; } = default!;

    private bool _SearchMode = false;

    private NavigationTreeItem _NavigationRoot = new();

    protected override void OnInitialized()
    {
        var expandedNavigationPath = this.RouteData.RouteToStoryDocsOrCustom ? this.RouteData.Parameter : null;
        var navigationService = this.Services.GetRequiredService<NavigationService>();
        this._NavigationRoot = navigationService.BuildNavigationTree(
            this.StoriesStore.StoryContainers, 
            this.CustomPageStore.CustomPageContainers, 
            this.BlazingStoryApp.OrderNavigation,
            expandedNavigationPath);
    }
}