<div class="@CssClass("search-field", new {
    HasFocus = this._SearchBoxHasFocus,
    HasText = this._SearchBoxHasText
})">
    <SvgIcon Type="SvgIconType.Find" Class="find-icon" />

    <input @ref="_InputElement" type="text" placeholder="@this.SearchBoxPlaceHolder" required autocomplete="off"
           value="@this.SearchText"
           @oninput="OnInputSearchText"
           @onfocus="OnFocusSearchBox"
           @onblur="OnBlurSearchBox" role="search" />

    <KeyMap Key="this._GoSearchHotKey" Class="shortcut-keymap" />
    <SvgIcon Type="SvgIconType.Close" Class="clear-icon" OnClick="ClearSearchText" />
</div>

@code
{
    [Parameter]
    public string? SearchText { get; set; }

    [Parameter]
    public EventCallback<string?> SearchTextChanged { get; set; }

    [Parameter]
    public EventCallback Focus { get; set; }

    [Parameter]
    public EventCallback Cleared { get; set; }

    [CascadingParameter]
    protected IServiceProvider Services { get; init; } = default!;

    private bool _SearchBoxHasText => !string.IsNullOrEmpty(this.SearchText);
    private string SearchBoxPlaceHolder => this._SearchBoxHasFocus ? "Type to find..." : "Find components";

    private ElementReference _InputElement;

    private bool _SearchBoxHasFocus = false;
    private HotKeyCombo? _GoSearchHotKey;

    protected override void OnInitialized()
    {
        var commandService = this.Services.GetRequiredService<CommandService>();
        var goSearchCommand = commandService[CommandType.GoSearch];

        if (goSearchCommand == null)
        {
            return;
        }

        this._GoSearchHotKey = goSearchCommand.HotKey;
        goSearchCommand.Subscribe(this.OnGoSearchCommand);
    }

    private async Task OnInputSearchText(ChangeEventArgs args)
    {
        this.SearchText = args.Value as string;
        await this.SearchTextChanged.InvokeAsync(this.SearchText);
    }

    private async Task OnFocusSearchBox()
    {
        await this.Focus.InvokeAsync();
        this._SearchBoxHasFocus = true;
    }

    private void OnBlurSearchBox() => this._SearchBoxHasFocus = false;

    private async ValueTask OnGoSearchCommand()
    {
        await Task.Delay(100);
        await this._InputElement.FocusAsync();
    }

    private async Task ClearSearchText()
    {
        this.SearchText = "";
        await this.SearchTextChanged.InvokeAsync(this.SearchText);
        await this.Cleared.InvokeAsync();
    }
}